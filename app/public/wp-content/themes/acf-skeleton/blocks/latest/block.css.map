{"version":3,"file":"blocks/latest/block.css","mappings":";AAMI;EAEI;EACA;EACA;EAEA;EACA;AANR;ACEQ;EDHJ;IAWQ;IACA;EANV;AACF;ACJQ;EDHJ;IAkBQ;EAPV;AACF;AAWI;EACI;EACA;EACA;EACA;AATR;ACfQ;EDoBJ;IAOQ;IACA;EARV;AACF;AAYI;EACI;EACA;EACA;EACA;AAVR;AAaI;EACI;EACA;EACA;EACA;AAXR;AAcI;EACI;EACA;EACA;EACA;AAZR;ACvCQ;ED+CJ;IAOQ;EAXV;AACF;AAcI;EACI;EACA;AAZR;AA0BY;EACI;AAxBhB;AA4BQ;EACI;EACA;EACA;AA1BZ;AA8BI;EACI;EACA;EACA;AA5BR;AA+BQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AA7BZ;AAgCQ;EACI;AA9BZ,C","sources":["webpack://olive-studio-starter/./src/scss/blocks/latest.scss","webpack://olive-studio-starter/./src/scss/mixins/_media.scss"],"sourcesContent":["@import '../utilities/index';\r\n@import '../mixins/index';\r\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&family=Roboto:wght@100;300;400&display=swap');\r\n\r\n#{$bodyClass}{\r\n\r\n    .title{\r\n          \r\n        font-size: calc(10px + 0.725vw);\r\n        color: #00a1b3;\r\n        position: relative;\r\n        // margin-left: 11%; \r\n        margin-top: 25%;\r\n        font-weight: 600;\r\n    \r\n        //Burası 768pxden düşük cihazlar için (mobile)\r\n        @include mq('md',max){\r\n            font-size: 18px;\r\n            margin-top: 34%;\r\n        }\r\n\r\n        //For Desktop\r\n        @include mq(\"lg\") {\r\n            //px de kullanılabilr\r\n            margin-top: 17%;\r\n            // margin-left: 11%;           \r\n        }\r\n\r\n    }\r\n    .date-info{\r\n        position: relative;\r\n        margin-top: 5%;\r\n        font-family: 'Roboto', sans-serif;\r\n        margin-bottom: 10%;\r\n\r\n        @include mq(\"lg\") {\r\n            display: grid;\r\n            grid-template-columns: 1fr 1fr 1fr; \r\n\r\n        }\r\n    }\r\n\r\n    .month{\r\n        text-transform: uppercase;\r\n        color: #00a1b3;\r\n        font-size: 15px;\r\n        font-family:'Roboto';\r\n    }\r\n\r\n    .day{\r\n        color: #00a1b3;\r\n        font-size: 23px;\r\n        font-family: 'Roboto';\r\n        font-weight: 600;\r\n    }\r\n\r\n    .hr{\r\n        width: 100%;\r\n        border-style: solid;\r\n        color: #00a1b3;\r\n        border-width: 2px;\r\n\r\n        @include mq(\"lg\") {\r\n            width: 90%; \r\n        }\r\n    }\r\n\r\n    .content{\r\n        font-family: 'Roboto';\r\n        font-size: 16px;\r\n\r\n        p{\r\n            // &::after {\r\n            //     content: \"\";\r\n            //     display: inline-block;\r\n            //     background-image: url(\"/wp-content/themes/acf-skeleton/dist/images/svg/Arrow-orange-shape.svg\");\r\n            //     background-size: cover;\r\n            //     background-position: center;\r\n            //     background-repeat: no-repeat;\r\n            //     width: 10px;\r\n            //     height: 7px;\r\n            // }\r\n\r\n            &:hover{\r\n                color: #e89b77;\r\n            }\r\n        }\r\n\r\n        .arrow{\r\n            color:#e89b77;\r\n            width: 10px;\r\n            height: 7px;\r\n        }\r\n    }\r\n   \r\n    .view{\r\n        font-size: 16px;\r\n        font-weight: 600;\r\n        color: #f16e30;\r\n\r\n        //arrow-orange.svg\r\n        &::after {\r\n            content: \"\";\r\n            display: inline-block;\r\n            background-image: url(\"/wp-content/themes/acf-skeleton/dist/images/svg/Arrow-orange.svg\");\r\n            background-size: cover;\r\n            background-position: center;\r\n            background-repeat: no-repeat;\r\n            width: 10px;\r\n            height: 7px;\r\n        }\r\n\r\n        &:hover{\r\n            color: #e89b77;\r\n        }\r\n    }\r\n}\r\n","//==============================================\r\n// Mixins/Media queries\r\n//==============================================\r\n@mixin mq($width, $type: min) {\r\n    @if map_has_key($breakpoints, $width) {\r\n        $width: map_get($breakpoints, $width);\r\n        @if $type == max {\r\n            $width: $width - 1px;\r\n        }\r\n        @media only screen and (#{$type}-width: $width) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin mq-between($min-width, $max-width) {\r\n    @if ( map_has_key($breakpoints, $min-width) & map_has_key($breakpoints, $max-width) ) {\r\n        $min-width: map_get($breakpoints, $min-width);\r\n        $max-width: map_get($breakpoints, $max-width);\r\n        @media only screen and (min-width: $min-width) and (max-width: $max-width) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin mq-orientation($width, $type: min, $orientation: 'ld') {\r\n    @if map_has_key($breakpoints, $width) {\r\n        $width: map_get($breakpoints, $width);\r\n        @if $type == max {\r\n            $width: $width - 1px;\r\n        }\r\n        @if $orientation == 'ld' {\r\n            @media only screen and (#{$type}-width: $width) and (orientation: landscape) {\r\n                @content;\r\n            }\r\n        }\r\n        @if $orientation == 'pt' {\r\n            @media only screen and (#{$type}-width: $width) and (orientation: portrait) {\r\n                @content;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin mq-between-orientation($min-width, $max-width, $orientation: 'ld') {\r\n    @if ( map_has_key($breakpoints, $min-width) & map_has_key($breakpoints, $max-width) ) {\r\n        $min-width: map_get($breakpoints, $min-width);\r\n        $max-width: map_get($breakpoints, $max-width);\r\n        @if $orientation == 'ld' {\r\n            @media only screen and (min-width: $min-width) and (max-width: $max-width) and (orientation: landscape) {\r\n                @content;\r\n            }\r\n        }\r\n        @if $orientation == 'pt' {\r\n            @media only screen and (min-width: $min-width) and (max-width: $max-width) and (orientation: portrait) {\r\n                @content;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@mixin mq-h($height, $type: min) {\r\n    @if $type == max {\r\n        $height: $height - 1px;\r\n    }\r\n    @media only screen and (#{$type}-height: $height) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin mq-h-orientation($height, $type: min, $orientation: 'ld') {\r\n    @if $orientation == 'ld' {\r\n        @media only screen and (#{$type}-height: $height) and (orientation: landscape) {\r\n            @content;\r\n        }\r\n    }\r\n    @if $orientation == 'pt' {\r\n        @media only screen and (#{$type}-height: $height) and (orientation: portrait) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n@mixin mq-h-between($min-height, $max-height) {\r\n    @media only screen and (min-height: $min-height) and (max-height: $max-height) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin mq-h-between-orientation($min-height, $max-height, $orientation: 'ld') {\r\n    @if $orientation == 'ld' {\r\n        @media only screen and (min-height: $min-height) and (max-height: $max-height) and (orientation: landscape) {\r\n            @content;\r\n        }\r\n    }\r\n    @if $orientation == 'pt' {\r\n        @media only screen and (min-height: $min-height) and (max-height: $max-height) and (orientation: portrait) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":""}